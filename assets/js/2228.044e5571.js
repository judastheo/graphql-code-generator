"use strict";(self.webpackChunk_graphql_codegen_website=self.webpackChunk_graphql_codegen_website||[]).push([[2228],{62228:function(e,t,n){n.r(t),n.d(t,{plugin:function(){return p},validate:function(){return r}});var i=n(83755),o=n(67425);const p=(e,t,n)=>{const o=[];return o.push(function(e,t){var n,o,p;const r=e.getTypeMap(),l=[],s=Object.keys(r).reduce(((e,n)=>{const o=r[n];if(!n.startsWith("__")&&((0,i.lp)(o)||(0,i.oT)(o))){const i=Object.keys(o.getFields()).filter((e=>!e.startsWith("__"))),p=`${n}KeySpecifier`,r=`${n}FieldPolicy`;return l.push(`export type ${p} = (${i.map((e=>`'${e}'`)).join(" | ")} | ${p})[];`),l.push(`export type ${r} = {\n${i.map((e=>`\t${e}?: FieldPolicy<any> | FieldReadFunction<any>`)).join(",\n")}\n};`),{...e,[n]:`Omit<TypePolicy, "fields" | "keyFields"> & {\n\t\tkeyFields${t.requireKeyFields?"":"?"}: false | ${p} | (() => undefined | ${p}),\n\t\tfields?: ${r},\n\t}`}}return e}),{}),c=[null===(n=e.getQueryType())||void 0===n?void 0:n.name,null===(o=e.getMutationType())||void 0===o?void 0:o.name,null===(p=e.getSubscriptionType())||void 0===p?void 0:p.name].filter(Boolean),d=`export type StrictTypedTypePolicies = {${Object.keys(s).map((e=>`\n\t${e}${t.requirePoliciesForAllTypes&&!c.includes(e)?"":"?"}: ${s[e]}`)).join(",")}\n};\nexport type TypedTypePolicies = StrictTypedTypePolicies & TypePolicies;`;return{prepend:[`import ${t.useTypeImports?"type ":""}{ FieldPolicy, FieldReadFunction, TypePolicies, TypePolicy } from '@apollo/client/cache';`],content:[...l,d].join("\n")}}(e,n)),{prepend:o.reduce(((e,t)=>[...e,...t.prepend||[]]),[]),append:o.reduce(((e,t)=>[...e,...t.append||[]]),[]),content:o.map((e=>e.content)).join("\n")}};const r=async(e,t,n,i)=>{if(".ts"!==(0,o.extname)(i)&&".tsx"!==(0,o.extname)(i))throw new Error('Plugin "apollo-client-helpers" requires extension to be ".ts" or ".tsx"!')}}}]);